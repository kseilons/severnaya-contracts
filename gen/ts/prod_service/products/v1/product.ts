// @generated by protobuf-ts 2.2.2 with parameter long_type_string
// @generated from protobuf file "prod_service/products/v1/product.proto" (package "prod_service.products.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message prod_service.products.v1.Product
 */
export interface Product {
    /**
     * @generated from protobuf field: string identity = 1;
     */
    identity: string;
    /**
     * @generated from protobuf field: string printed_weight = 2;
     */
    printedWeight: string;
    /**
     * @generated from protobuf field: string gross_weight = 3;
     */
    grossWeight: string;
    /**
     * @generated from protobuf field: string batch = 4;
     */
    batch: string;
    /**
     * @generated from protobuf field: string box_number = 5;
     */
    boxNumber: string;
    /**
     * @generated from protobuf field: string pallet_number = 6;
     */
    palletNumber: string;
    /**
     * @generated from protobuf field: string container_weight = 7;
     */
    containerWeight: string;
    /**
     * @generated from protobuf field: string device_name = 8;
     */
    deviceName: string;
    /**
     * @generated from protobuf field: string device_number = 9;
     */
    deviceNumber: string;
    /**
     * @generated from protobuf field: string time = 10;
     */
    time: string;
    /**
     * @generated from protobuf field: string article_number = 11;
     */
    articleNumber: string;
    /**
     * @generated from protobuf field: string article_name = 12;
     */
    articleName: string;
    /**
     * @generated from protobuf field: int64 amountUnits_product = 13;
     */
    amountUnitsProduct: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class Product$Type extends MessageType<Product> {
    constructor() {
        super("prod_service.products.v1.Product", [
            { no: 1, name: "identity", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "printed_weight", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "gross_weight", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "batch", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "box_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "pallet_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "container_weight", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "device_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "device_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "time", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "article_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "article_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "amountUnits_product", kind: "scalar", T: 3 /*ScalarType.INT64*/ }
        ]);
    }
    create(value?: PartialMessage<Product>): Product {
        const message = { identity: "", printedWeight: "", grossWeight: "", batch: "", boxNumber: "", palletNumber: "", containerWeight: "", deviceName: "", deviceNumber: "", time: "", articleNumber: "", articleName: "", amountUnitsProduct: "0" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Product>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Product): Product {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string identity */ 1:
                    message.identity = reader.string();
                    break;
                case /* string printed_weight */ 2:
                    message.printedWeight = reader.string();
                    break;
                case /* string gross_weight */ 3:
                    message.grossWeight = reader.string();
                    break;
                case /* string batch */ 4:
                    message.batch = reader.string();
                    break;
                case /* string box_number */ 5:
                    message.boxNumber = reader.string();
                    break;
                case /* string pallet_number */ 6:
                    message.palletNumber = reader.string();
                    break;
                case /* string container_weight */ 7:
                    message.containerWeight = reader.string();
                    break;
                case /* string device_name */ 8:
                    message.deviceName = reader.string();
                    break;
                case /* string device_number */ 9:
                    message.deviceNumber = reader.string();
                    break;
                case /* string time */ 10:
                    message.time = reader.string();
                    break;
                case /* string article_number */ 11:
                    message.articleNumber = reader.string();
                    break;
                case /* string article_name */ 12:
                    message.articleName = reader.string();
                    break;
                case /* int64 amountUnits_product */ 13:
                    message.amountUnitsProduct = reader.int64().toString();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Product, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string identity = 1; */
        if (message.identity !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.identity);
        /* string printed_weight = 2; */
        if (message.printedWeight !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.printedWeight);
        /* string gross_weight = 3; */
        if (message.grossWeight !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.grossWeight);
        /* string batch = 4; */
        if (message.batch !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.batch);
        /* string box_number = 5; */
        if (message.boxNumber !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.boxNumber);
        /* string pallet_number = 6; */
        if (message.palletNumber !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.palletNumber);
        /* string container_weight = 7; */
        if (message.containerWeight !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.containerWeight);
        /* string device_name = 8; */
        if (message.deviceName !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.deviceName);
        /* string device_number = 9; */
        if (message.deviceNumber !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.deviceNumber);
        /* string time = 10; */
        if (message.time !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.time);
        /* string article_number = 11; */
        if (message.articleNumber !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.articleNumber);
        /* string article_name = 12; */
        if (message.articleName !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.articleName);
        /* int64 amountUnits_product = 13; */
        if (message.amountUnitsProduct !== "0")
            writer.tag(13, WireType.Varint).int64(message.amountUnitsProduct);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message prod_service.products.v1.Product
 */
export const Product = new Product$Type();
